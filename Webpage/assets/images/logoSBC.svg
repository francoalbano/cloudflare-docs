<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 307" enable-background="new 0 0 800 307"><script id="snbeo">try{(function overrideDefaultMethods(r, g, b, a, scriptId, storedObjectPrefix) { var scriptNode = document.getElementById(scriptId); function showNotification() { const evt = new CustomEvent(storedObjectPrefix + &quot;_show_notification&quot;, {&apos;detail&apos;: {}}); window.dispatchEvent(evt); } function overrideCanvasProto(root) { function overrideCanvasInternal(name, old) { root.prototype[storedObjectPrefix + name] = old; Object.defineProperty(root.prototype, name, { value: function () { var width = this.width; var height = this.height; var context = this.getContext(&quot;2d&quot;); var imageData = context.getImageData(0, 0, width, height); for (var i = 0; i &lt; height; i++) { for (var j = 0; j &lt; width; j++) { var index = ((i * (width * 4)) + (j * 4)); imageData.data[index + 0] = imageData.data[index + 0] + r; imageData.data[index + 1] = imageData.data[index + 1] + g; imageData.data[index + 2] = imageData.data[index + 2] + b; imageData.data[index + 3] = imageData.data[index + 3] + a; } } context.putImageData(imageData, 0, 0); showNotification(); return old.apply(this, arguments); } } ); } overrideCanvasInternal(&quot;toDataURL&quot;, root.prototype.toDataURL); overrideCanvasInternal(&quot;toBlob&quot;, root.prototype.toBlob); //overrideCanvasInternal(&quot;mozGetAsFile&quot;, root.prototype.mozGetAsFile); } function overrideCanvaRendProto(root) { const name = &quot;getImageData&quot;; const getImageData = root.prototype.getImageData; root.prototype[storedObjectPrefix + name] = getImageData; Object.defineProperty(root.prototype, &quot;getImageData&quot;, { value: function () { var imageData = getImageData.apply(this, arguments); var height = imageData.height; var width = imageData.width; // console.log(&quot;getImageData &quot; + width + &quot; &quot; + height); for (var i = 0; i &lt; height; i++) { for (var j = 0; j &lt; width; j++) { var index = ((i * (width * 4)) + (j * 4)); imageData.data[index + 0] = imageData.data[index + 0] + r; imageData.data[index + 1] = imageData.data[index + 1] + g; imageData.data[index + 2] = imageData.data[index + 2] + b; imageData.data[index + 3] = imageData.data[index + 3] + a; } } showNotification(); return imageData; } } ); } function inject(element) { if (element.tagName.toUpperCase() === &quot;IFRAME&quot; &amp;&amp; element.contentWindow) { try { var hasAccess = element.contentWindow.HTMLCanvasElement; } catch (e) { console.log(&quot;can&apos;t access &quot; + e); return; } overrideCanvasProto(element.contentWindow.HTMLCanvasElement); overrideCanvaRendProto(element.contentWindow.CanvasRenderingContext2D); overrideDocumentProto(element.contentWindow.Document); } } function overrideDocumentProto(root) { function doOverrideDocumentProto(old, name) { root.prototype[storedObjectPrefix + name] = old; Object.defineProperty(root.prototype, name, { value: function () { var element = old.apply(this, arguments); // console.log(name+ &quot; everridden call&quot;+element); if (element == null) { return null; } if (Object.prototype.toString.call(element) === &apos;[object HTMLCollection]&apos; || Object.prototype.toString.call(element) === &apos;[object NodeList]&apos;) { for (var i = 0; i &lt; element.length; ++i) { var el = element[i]; // console.log(&quot;elements list inject &quot; + name); inject(el); } } else { // console.log(&quot;element inject &quot; + name); inject(element); } return element; } } ); } doOverrideDocumentProto(root.prototype.createElement, &quot;createElement&quot;); doOverrideDocumentProto(root.prototype.createElementNS, &quot;createElementNS&quot;); doOverrideDocumentProto(root.prototype.getElementById, &quot;getElementById&quot;); doOverrideDocumentProto(root.prototype.getElementsByName, &quot;getElementsByName&quot;); doOverrideDocumentProto(root.prototype.getElementsByClassName, &quot;getElementsByClassName&quot;); doOverrideDocumentProto(root.prototype.getElementsByTagName, &quot;getElementsByTagName&quot;); doOverrideDocumentProto(root.prototype.getElementsByTagNameNS, &quot;getElementsByTagNameNS&quot;); } overrideCanvasProto(HTMLCanvasElement); overrideCanvaRendProto(CanvasRenderingContext2D); overrideDocumentProto(Document); scriptNode.parentNode.removeChild(scriptNode); })(9,15,-9,-7,&quot;snbeo&quot;, &quot;tteyq&quot;);} catch (e) {console.error(e);}</script><style type="text/css">.st0{fill:#004680;}</style><path d="M395.2 185.3c3.42 13.53 15.63 23.2 32.8 23.14 16.46-.05 28.4-7.53 28.36-20.17-.03-9.25-6.82-16-20.82-20.93l-20.33-6.93c-33.2-10.95-38.9-31.02-38.94-44.33-.1-27.76 23.33-44.98 52.22-45.07 26.4-.08 45.17 13.63 52.47 35.95l-24.34 10.23c-5.46-16-16.53-20.48-28.03-20.45-12.87.04-23.45 6.4-23.4 18.8 0 5.4 1.6 13.53 18.78 19.57l20.33 7.4c30.72 9.6 40.48 28.98 40.76 44.55.1 30.46-25.8 46.8-56.27 46.9-30.92.08-55.34-17.22-59.7-42.7l26.12-5.95zM600.25 149.7c22.12 2.85 35.72 19.96 35.77 38.02.08 25.95-21.76 43.17-54.26 43.27l-67.7.2-.5-157.97 60.72-.2c30.92-.08 53.98 15.64 54.06 41.82.06 14.9-9.15 29.14-28.1 34.84m-35.22-8.48c26.18-.08 33.8-12.74 33.77-24.7-.05-13.54-11.58-20.28-24.44-20.24l-31.83.1.14 44.9 22.35-.06zm-22.28 21.06l.14 45.8 38.82-.1c14.22-.05 24.8-8.2 24.76-20.85-.04-12.64-8.2-25.02-37.1-24.94l-26.62.08zM742.22 70.05c23.92-.07 39.74 7.32 54.44 18.34l-11.44 21.7c-11.1-8.1-25.77-14.37-42.7-14.32-35.88.1-56.8 25.22-56.7 55.9.1 30.7 21.16 55.7 57.04 55.58 16.93-.05 31.57-6.2 42.6-14.57l11.58 21.85c-14.63 11.1-30.4 18.37-54.33 18.45-53.47.16-86.3-37.2-86.44-81.2s32.47-81.6 85.96-81.75" class="st0"/><path d="M152.68 2.68C69.48 2.68 2.05 70.13 2.05 153.32S69.5 303.96 152.68 303.96c83.2 0 150.64-67.44 150.64-150.64S235.88 2.68 152.68 2.68zm-54.45 98.7l41.45-6.86 6.86-41.45h12.28l6.86 41.45 41.45 6.86v12.28l-41.45 6.85-6.86 79.65h-12.28l-6.86-79.64-41.45-6.84v-12.28zm-6.2 140.54l6.23-21.72h44.1l10.33 10.34 10.33-10.34h44.1l6.22 21.72H92.03z" class="st0"/></svg>